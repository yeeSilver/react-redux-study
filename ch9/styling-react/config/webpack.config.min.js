"use strict";const fs=require("fs"),path=require("path"),webpack=require("webpack"),resolve=require("resolve"),HtmlWebpackPlugin=require("html-webpack-plugin"),CaseSensitivePathsPlugin=require("case-sensitive-paths-webpack-plugin"),InlineChunkHtmlPlugin=require("react-dev-utils/InlineChunkHtmlPlugin"),TerserPlugin=require("terser-webpack-plugin"),MiniCssExtractPlugin=require("mini-css-extract-plugin"),CssMinimizerPlugin=require("css-minimizer-webpack-plugin"),{WebpackManifestPlugin:WebpackManifestPlugin}=require("webpack-manifest-plugin"),InterpolateHtmlPlugin=require("react-dev-utils/InterpolateHtmlPlugin"),WorkboxWebpackPlugin=require("workbox-webpack-plugin"),ModuleScopePlugin=require("react-dev-utils/ModuleScopePlugin"),getCSSModuleLocalIdent=require("react-dev-utils/getCSSModuleLocalIdent"),ESLintPlugin=require("eslint-webpack-plugin"),paths=require("./paths"),modules=require("./modules"),getClientEnvironment=require("./env"),ModuleNotFoundPlugin=require("react-dev-utils/ModuleNotFoundPlugin"),ForkTsCheckerWebpackPlugin="true"===process.env.TSC_COMPILE_ON_ERROR?require("react-dev-utils/ForkTsCheckerWarningWebpackPlugin"):require("react-dev-utils/ForkTsCheckerWebpackPlugin"),ReactRefreshWebpackPlugin=require("@pmmmwh/react-refresh-webpack-plugin"),createEnvironmentHash=require("./webpack/persistentCache/createEnvironmentHash"),shouldUseSourceMap="false"!==process.env.GENERATE_SOURCEMAP,reactRefreshRuntimeEntry=require.resolve("react-refresh/runtime"),reactRefreshWebpackPluginRuntimeEntry=require.resolve("@pmmmwh/react-refresh-webpack-plugin"),babelRuntimeEntry=require.resolve("babel-preset-react-app"),babelRuntimeEntryHelpers=require.resolve("@babel/runtime/helpers/esm/assertThisInitialized",{paths:[babelRuntimeEntry]}),babelRuntimeRegenerator=require.resolve("@babel/runtime/regenerator",{paths:[babelRuntimeEntry]}),shouldInlineRuntimeChunk="false"!==process.env.INLINE_RUNTIME_CHUNK,emitErrorsAsWarnings="true"===process.env.ESLINT_NO_DEV_ERRORS,disableESLintPlugin="true"===process.env.DISABLE_ESLINT_PLUGIN,imageInlineSizeLimit=parseInt(process.env.IMAGE_INLINE_SIZE_LIMIT||"10000"),useTypeScript=fs.existsSync(paths.appTsConfig),useTailwind=fs.existsSync(path.join(paths.appPath,"tailwind.config.js")),swSrc=paths.swSrc,cssRegex=/\.css$/,cssModuleRegex=/\.module\.css$/,sassRegex=/\.(scss|sass)$/,sassModuleRegex=/\.module\.(scss|sass)$/,hasJsxRuntime=(()=>{if("true"===process.env.DISABLE_NEW_JSX_TRANSFORM)return!1;try{return require.resolve("react/jsx-runtime"),!0}catch(e){return!1}})();module.exports=function(webpackEnv){const isEnvDevelopment="development"===webpackEnv,isEnvProduction="production"===webpackEnv,isEnvProductionProfile=isEnvProduction&&process.argv.includes("--profile"),env=getClientEnvironment(paths.publicUrlOrPath.slice(0,-1)),shouldUseReactRefresh=env.raw.FAST_REFRESH,getStyleLoaders=(cssOptions,preProcessor)=>{const loaders=[isEnvDevelopment&&require.resolve("style-loader"),isEnvProduction&&{loader:MiniCssExtractPlugin.loader,options:paths.publicUrlOrPath.startsWith(".")?{publicPath:"../../"}:{}},{loader:require.resolve("css-loader"),options:cssOptions},{loader:require.resolve("postcss-loader"),options:{postcssOptions:{ident:"postcss",config:!1,plugins:useTailwind?["tailwindcss","postcss-flexbugs-fixes",["postcss-preset-env",{autoprefixer:{flexbox:"no-2009"},stage:3}]]:["postcss-flexbugs-fixes",["postcss-preset-env",{autoprefixer:{flexbox:"no-2009"},stage:3}],"postcss-normalize"]},sourceMap:isEnvProduction?shouldUseSourceMap:isEnvDevelopment}}].filter(Boolean);return preProcessor&&loaders.push({loader:require.resolve("resolve-url-loader"),options:{sourceMap:isEnvProduction?shouldUseSourceMap:isEnvDevelopment,root:paths.appSrc}},{loader:require.resolve(preProcessor),options:{sourceMap:!0}}),loaders};return{target:["browserslist"],mode:isEnvProduction?"production":isEnvDevelopment&&"development",bail:isEnvProduction,devtool:isEnvProduction?!!shouldUseSourceMap&&"source-map":isEnvDevelopment&&"cheap-module-source-map",entry:paths.appIndexJs,output:{path:paths.appBuild,pathinfo:isEnvDevelopment,filename:isEnvProduction?"static/js/[name].[contenthash:8].js":isEnvDevelopment&&"static/js/bundle.js",chunkFilename:isEnvProduction?"static/js/[name].[contenthash:8].chunk.js":isEnvDevelopment&&"static/js/[name].chunk.js",assetModuleFilename:"static/media/[name].[hash][ext]",publicPath:paths.publicUrlOrPath,devtoolModuleFilenameTemplate:isEnvProduction?info=>path.relative(paths.appSrc,info.absoluteResourcePath).replace(/\\/g,"/"):isEnvDevelopment&&(info=>path.resolve(info.absoluteResourcePath).replace(/\\/g,"/"))},cache:{type:"filesystem",version:createEnvironmentHash(env.raw),cacheDirectory:paths.appWebpackCache,store:"pack",buildDependencies:{defaultWebpack:["webpack/lib/"],config:[__filename],tsconfig:[paths.appTsConfig,paths.appJsConfig].filter(f=>fs.existsSync(f))}},infrastructureLogging:{level:"none"},optimization:{minimize:isEnvProduction,minimizer:[new TerserPlugin({terserOptions:{parse:{ecma:8},compress:{ecma:5,warnings:!1,comparisons:!1,inline:2},mangle:{safari10:!0},keep_classnames:isEnvProductionProfile,keep_fnames:isEnvProductionProfile,output:{ecma:5,comments:!1,ascii_only:!0}}}),new CssMinimizerPlugin]},resolve:{modules:["node_modules",paths.appNodeModules].concat(modules.additionalModulePaths||[]),extensions:paths.moduleFileExtensions.map(ext=>`.${ext}`).filter(ext=>useTypeScript||!ext.includes("ts")),alias:{"react-native":"react-native-web",...isEnvProductionProfile&&{"react-dom$":"react-dom/profiling","scheduler/tracing":"scheduler/tracing-profiling"},...modules.webpackAliases||{}},plugins:[new ModuleScopePlugin(paths.appSrc,[paths.appPackageJson,reactRefreshRuntimeEntry,reactRefreshWebpackPluginRuntimeEntry,babelRuntimeEntry,babelRuntimeEntryHelpers,babelRuntimeRegenerator])]},module:{strictExportPresence:!0,rules:[shouldUseSourceMap&&{enforce:"pre",exclude:/@babel(?:\/|\\{1,2})runtime/,test:/\.(js|mjs|jsx|ts|tsx|css)$/,loader:require.resolve("source-map-loader")},{oneOf:[{test:[/\.avif$/],type:"asset",mimetype:"image/avif",parser:{dataUrlCondition:{maxSize:imageInlineSizeLimit}}},{test:[/\.bmp$/,/\.gif$/,/\.jpe?g$/,/\.png$/],type:"asset",parser:{dataUrlCondition:{maxSize:imageInlineSizeLimit}}},{test:/\.svg$/,use:[{loader:require.resolve("@svgr/webpack"),options:{prettier:!1,svgo:!1,svgoConfig:{plugins:[{removeViewBox:!1}]},titleProp:!0,ref:!0}},{loader:require.resolve("file-loader"),options:{name:"static/media/[name].[hash].[ext]"}}],issuer:{and:[/\.(ts|tsx|js|jsx|md|mdx)$/]}},{test:/\.(js|mjs|jsx|ts|tsx)$/,include:paths.appSrc,loader:require.resolve("babel-loader"),options:{customize:require.resolve("babel-preset-react-app/webpack-overrides"),presets:[[require.resolve("babel-preset-react-app"),{runtime:hasJsxRuntime?"automatic":"classic"}]],plugins:[isEnvDevelopment&&shouldUseReactRefresh&&require.resolve("react-refresh/babel")].filter(Boolean),cacheDirectory:!0,cacheCompression:!1,compact:isEnvProduction}},{test:/\.(js|mjs)$/,exclude:/@babel(?:\/|\\{1,2})runtime/,loader:require.resolve("babel-loader"),options:{babelrc:!1,configFile:!1,compact:!1,presets:[[require.resolve("babel-preset-react-app/dependencies"),{helpers:!0}]],cacheDirectory:!0,cacheCompression:!1,sourceMaps:shouldUseSourceMap,inputSourceMap:shouldUseSourceMap}},{test:cssRegex,exclude:cssModuleRegex,use:getStyleLoaders({importLoaders:1,sourceMap:isEnvProduction?shouldUseSourceMap:isEnvDevelopment,modules:{mode:"icss"}}),sideEffects:!0},{test:cssModuleRegex,use:getStyleLoaders({importLoaders:1,sourceMap:isEnvProduction?shouldUseSourceMap:isEnvDevelopment,modules:{mode:"local",getLocalIdent:getCSSModuleLocalIdent}})},{test:sassRegex,exclude:sassModuleRegex,use:getStyleLoaders({importLoaders:3,sourceMap:isEnvProduction?shouldUseSourceMap:isEnvDevelopment,modules:{mode:"icss"}}).concat({loader:require.resolve("sass-loader"),options:{includePaths:[paths.appSrc+"/styles"],sourceMap:isEnvProduction&&shouldUseSourceMap,data:"@import 'utils';"}}),sideEffects:!0},{test:sassModuleRegex,use:getStyleLoaders({importLoaders:3,sourceMap:isEnvProduction?shouldUseSourceMap:isEnvDevelopment,modules:{mode:"local",getLocalIdent:getCSSModuleLocalIdent}},"sass-loader")},{exclude:[/^$/,/\.(js|mjs|jsx|ts|tsx)$/,/\.html$/,/\.json$/],type:"asset/resource"}]}].filter(Boolean)},plugins:[new HtmlWebpackPlugin(Object.assign({},{inject:!0,template:paths.appHtml},isEnvProduction?{minify:{removeComments:!0,collapseWhitespace:!0,removeRedundantAttributes:!0,useShortDoctype:!0,removeEmptyAttributes:!0,removeStyleLinkTypeAttributes:!0,keepClosingSlash:!0,minifyJS:!0,minifyCSS:!0,minifyURLs:!0}}:void 0)),isEnvProduction&&shouldInlineRuntimeChunk&&new InlineChunkHtmlPlugin(HtmlWebpackPlugin,[/runtime-.+[.]js/]),new InterpolateHtmlPlugin(HtmlWebpackPlugin,env.raw),new ModuleNotFoundPlugin(paths.appPath),new webpack.DefinePlugin(env.stringified),isEnvDevelopment&&shouldUseReactRefresh&&new ReactRefreshWebpackPlugin({overlay:!1}),isEnvDevelopment&&new CaseSensitivePathsPlugin,isEnvProduction&&new MiniCssExtractPlugin({filename:"static/css/[name].[contenthash:8].css",chunkFilename:"static/css/[name].[contenthash:8].chunk.css"}),new WebpackManifestPlugin({fileName:"asset-manifest.json",publicPath:paths.publicUrlOrPath,generate:(seed,files,entrypoints)=>{const manifestFiles=files.reduce((manifest,file)=>(manifest[file.name]=file.path,manifest),seed),entrypointFiles=entrypoints.main.filter(fileName=>!fileName.endsWith(".map"));return{files:manifestFiles,entrypoints:entrypointFiles}}}),new webpack.IgnorePlugin({resourceRegExp:/^\.\/locale$/,contextRegExp:/moment$/}),isEnvProduction&&fs.existsSync(swSrc)&&new WorkboxWebpackPlugin.InjectManifest({swSrc:swSrc,dontCacheBustURLsMatching:/\.[0-9a-f]{8}\./,exclude:[/\.map$/,/asset-manifest\.json$/,/LICENSE/],maximumFileSizeToCacheInBytes:5242880}),useTypeScript&&new ForkTsCheckerWebpackPlugin({async:isEnvDevelopment,typescript:{typescriptPath:resolve.sync("typescript",{basedir:paths.appNodeModules}),configOverwrite:{compilerOptions:{sourceMap:isEnvProduction?shouldUseSourceMap:isEnvDevelopment,skipLibCheck:!0,inlineSourceMap:!1,declarationMap:!1,noEmit:!0,incremental:!0,tsBuildInfoFile:paths.appTsBuildInfoFile}},context:paths.appPath,diagnosticOptions:{syntactic:!0},mode:"write-references"},issue:{include:[{file:"../**/src/**/*.{ts,tsx}"},{file:"**/src/**/*.{ts,tsx}"}],exclude:[{file:"**/src/**/__tests__/**"},{file:"**/src/**/?(*.){spec|test}.*"},{file:"**/src/setupProxy.*"},{file:"**/src/setupTests.*"}]},logger:{infrastructure:"silent"}}),!disableESLintPlugin&&new ESLintPlugin({extensions:["js","mjs","jsx","ts","tsx"],formatter:require.resolve("react-dev-utils/eslintFormatter"),eslintPath:require.resolve("eslint"),failOnError:!(isEnvDevelopment&&emitErrorsAsWarnings),context:paths.appSrc,cache:!0,cacheLocation:path.resolve(paths.appNodeModules,".cache/.eslintcache"),cwd:paths.appPath,resolvePluginsRelativeTo:__dirname,baseConfig:{extends:[require.resolve("eslint-config-react-app/base")],rules:{...!hasJsxRuntime&&{"react/react-in-jsx-scope":"error"}}}})].filter(Boolean),performance:!1}};